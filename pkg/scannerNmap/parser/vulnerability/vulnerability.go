package vulnerability

import (
	"VulnScanner/pkg/api/v1"
	"VulnScanner/pkg/logging"
	"github.com/Ullaakut/nmap/v2"
	"github.com/sirupsen/logrus"
	"strconv"
)

// Перебираем все значения среза nmap.Script чтобы найти значения CVSS и уровень угрозы
func GetVulnerability(port *nmap.Port) *[]*api.Vulnerability {
	vulnsOnPort := []*api.Vulnerability{}
	var cvssIndet string
	var cvssScore float64

	for _, scr := range (*port).Scripts {
		for _, tbl1 := range scr.Tables {
			for _, tbl2 := range tbl1.Tables {
				for _, elm := range tbl2.Elements {
					if elm.Key == "id" {
						cvssIndet = elm.Value
					}
					if elm.Key == "cvss" {
						cvssScore, _ = strconv.ParseFloat(elm.Value, 32)
					}
					if cvssIndet != "" {
						logging.Ent.WithFields(logrus.Fields{"Identifier": cvssIndet}).Trace("parse vulnerability")
						vulnsOnPort = append(vulnsOnPort, &api.Vulnerability{
							Identifier: cvssIndet,
							CvssScore:  float32(cvssScore),
						})
						cvssIndet = ""
					}
				}
			}
		}
	}
	return &vulnsOnPort
}
